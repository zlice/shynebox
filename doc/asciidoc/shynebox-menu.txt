shynebox-menu(5)
===============
zlice https://github.com/zlice/shynebox
v2023.1.0, 11 October 2023
:man source:   shynebox-menu.txt
:man version:  {revision}
:man manual:   Shynebox Manual

NAME
----
shynebox-menu - shynebox(1) menu syntax

SYNOPSIS
--------
@pkgdatadir@/menu

~/.shynebox/menu

~/.shynebox/windowmenu

SYNTAX
------
Variable parameters are shown in emphasis: 'argument'

All other characters shown are required verbatim. Whitespace is only
required to delimit words, but it is fine to add more whitespace.

DESCRIPTION
-----------
There are two default menus in shynebox that can be configured.

The first is the *ROOT MENU*, which is bound to a right-click desktop
by default. This same syntax is used for the *CustomMenu* command,
mentioned in *shynebox-keys(5)*.

Shynebox installs a default root menu file in *@pkgdatadir@/menu*
("shynebox -i" will confirm this location). By convention, this is
copied to *~/.shynebox/menu* per-user. That means this system-wide
menu can be customized to change the default for all users at once,
while still allowing users to modify their individual menu file. To
change where this file resides, users can update the `init' config,
described under *CONFIG* in *shynebox(1)* or the same section below.

The second type is the *WINDOW MENU*, which defines the contents of the
menu which appears when you right-click on a window's titlebar or
iconbar item. This menu's default filename is *~/.shynebox/windowmenu*,
and the default system location *@pkgdatadir@/windowmenu*.

You do not need to ``reload'' shynebox after editing either menu file,
the changes should be picked up the next time you open the menu.

(Note: old fluxbox menu tools should be compatible, but some look for
outdated programs. If the tool is really old, it may have items not
compatible with shynebox.)

ROOT MENU
---------
The root menu must begin with a *[begin]* tag and end with an *[end]* tag,
and every tag must be on its own line. There are up to four fields in a
menu line. They are of the form:

    ['tag'] ('label') {'command'} <'icon'>

The <'icon'> field is always optional when shown below. If specified,
the 'icon' will be scaled down and displayed in the menu alongside the
text label of the item. It must be in .xpm or .png format.

Any line that starts with a '#' or '!' is considered a comment and ignored by
shynebox. Also, in the label/command/filename fields you can escape any
character. Using '\\' inserts a literal back-slash into the field.

You may enter labels, commands, and icons using characters from any *iconv(1)*
language/locale by specifying the encoding used via the *[encoding]* tag,
detailed below.

Structural Tags
~~~~~~~~~~~~~~~
*[begin]* ('title');;
    This tells shynebox to start parsing the menu file. This tag is required for
    shynebox to read your menu file. If it cannot find it, the system default menu
    is used in its place. The 'title' appears at the top of the menu. And *[end]*
    tag is required to end the menu.

*[submenu]* ('label') {'title'} <'icon'>;;
    This tells shynebox to create and parse a new menu, which is inserted as a
    submenu into the parent menu. These menus are parsed recursively, so there is
    no limit to the number of levels or nested submenus you can have. The 'label'
    is the text that will appear in the parent menu, and the 'title' is shown at
    the top of the submenu.  If omitted, the 'title' will be the same as the
    'label'.  An *[end]* tag is required to end the submenu.

*[end]*;;
    This tells shynebox that it is at the end of a menu. This can either be a
    *[submenu]* or the *[begin]* tag of the main root menu. There must be at
    least one of these tags in your menu to correspond to the required *[begin]*
    tag, and one for each *[submenu]*.

*[encoding]* {'encoding'};;
    This begins an *[encoding]* section and specifies the string encoding of
    all strings until the matching *[endencoding]* tag. For a list of available
    encodings on your system, run *iconv -l*.

*[endencoding]*;;
    This ends an *[encoding]* section.

*[include]* ('path');;
    Parses the file specified by filename inline with the current menu. The
    'path' can be the full path to a file or it can begin with *~/*, which will
    be expanded into your home directory. If 'path' is a directory, then all
    files in that directory are included.

*[separator]*;;
    This will create a nice separation line. Useful for splitting up sections in
    a ``pretty'' way. The optional 'comment' is not displayed, but can be useful
    for internal documentation or script parsing of menu files.

*[nop]* ('label') <'icon'>;;
    Insert a non-operational item into the current menu. This is much like
    *[separator]*, but instead of a line, it inserts a 'label'. This can be used
    to help format the menu into blocks or sections if so desired. The 'label' is
    optional, and if omitted a blank item will be inserted.

Applications
~~~~~~~~~~~~
*[exec]* ('label') {'command...'} <'icon'>;;
    Inserts a command item into the menu. When you select the menu item from the
    menu, shynebox runs 'command...' in your *$SHELL* (or /bin/sh if $SHELL is not
    set). You can use this to launch applications, run shell scripts, etc. Since
    all arguments are passed verbatim to the shell, you can use environment
    variables, pipes, or anything else the shell can do. Note that processes only
    see environment variables that were set before shynebox started (such as in
    ~/.shynebox/startup).

Shynebox Functions
~~~~~~~~~~~~~~~~~
*[config]* ('label') <'icon'>;;
    Inserts a shynebox native submenu item, containing numerous configuration
    options concerning window placement, focus style, window moving style, etc.
    See *Configuration Menu* in *shynebox(1)* for details.

*[reconfig]* ('label') <'icon'>;;
    When selected this item re-reads the current style and menu files and applies
    any changes. This is useful for creating a new style or theme, as you don't
    have to constantly restart shynebox every time you save your style.  However,
    shynebox automatically rereads the menu whenever it changes.

*[restart]* ('label') {'command'} <'icon'>;;
    This tells shynebox to restart. If 'command' is supplied, it shuts down and
    runs the command (which is commonly the name of another window manager). If
    'command' is omitted, shynebox restarts itself.

*[exit]* ('label') <'icon'>;;
    Inserts an item that shuts down and exits shynebox. Any open windows are
    reparented to the root window before shynebox exits.

*[style]* ('label') {'filename'} <'icon'>;;
    This tells shynebox to insert an item that, when selected, reads style file
    named filename and apply the new textures, colors and fonts to the current
    running session.

*[stylesmenu]* ('directory') <'icon'>;;
    Reads all filenames from the specified directory, assuming that they are all
    valid style files, and creates inline menu items in the current menu for
    every filename, that, when selected by the user will apply the selected style
    file to the current session. The labels that are created in the menu are the
    filenames of the style files.

*[stylesdir]* ('label') {'directory'} <'icon'>;;
    Creates a submenu entry with 'label' (that is also the title of the new
    submenu), and inserts in that submenu all filenames in the specified
    'directory', assuming that they are all valid style files (directories are
    ignored) in the same way as the *[stylesdir]* command does. Both
    *[stylesdir]* and *[stylesmenu]* commands make it possible to install style
    files without editing your init file.

*[wallpapers]* ('directory') {'command'} <'icon'>;;
    This inserts a menu item to set the wallpaper for each file in the given
    directory. The 'command' is optional, and defaults to *sbsetbg*.

*[workspaces]* ('label') <'icon'>;;
    This tells shynebox to insert a link to the workspaces menu directly into your
    menu. See *Workspace Menu* in *shynebox(1)* for details.

*[*'command'*]* ('label') <'icon'>;;
    In addition to the commands above, any legal keys file 'command' may be used
    as a menu item. See *shynebox-keys(5)* for more information.

WINDOW MENU
-----------
The syntax for the Window Menu is mostly identical to that for the *ROOT MENU*;
it must start with *[begin]* and end with *[end]*, and may have any of the above
tags. However, it may also contain any of the following window-specific *[*'tag'*]*s,
which each must be on a line by itself with no labels, commands, or icons.

The additional available tags in this menu are:

*[shade]*;;
    Shade or unshade (roll-up to only a titlebar) the window.

*[stick]*;;
    Stick or unstick the window. (Stuck windows are displayed on all workspaces).

*[iconify]*;;
    Iconify (minimize) the window.

*[maximize]*;;
    Maximize or unmaximize the window.
    The button with which you click alters the behavior of this item as follows:

    * Button 1  (Un)Maximize as normal.
    * Button 2  (Un)Maximize window vertically.
    * Button 3  (Un)Maximize window horizontally.

*[settitledialog]*;;
    Opens a dialog to change the title.

*[raise]*;;
    Raise the window to the top of the stack within its layer.

*[lower]*;;
    Lower the window to the bottom of the stack within its layer.

*[sendto]*;;
    Sends the window to a different workspace. When you select the workspace with
    a middle-click, shynebox will also change to the new workspace. A regular
    click only sends the window.

*[layer]*;;
    ``Layer...'' submenu which lets you change the layer of this window.

*[remember]*;;
    Adds the ``Remember...'' menu item, which allows you to specify which
    settings should be stored in the `apps' file (See *shynebox-apps(5)* for more
    details).

*[separator]*;;
    Adds a horizontal line to the menu.

*[close]*;;
    Closes the window gracefully.

*[kill]*;;
    Kills the window's process, like *xkill(1)*.

FILES
-----
    *~/.shynebox/menu*::
        This is the default location for the user's root menu.
    *@pkgdatadir@/menu*::
        This is the system-wide root menu file. It will be copied
        if the user's root menu is missing.
    *~/.shynebox/windowmenu*::
        This is the default location for the user's window menu.
    *@pkgdatadir@/menu*::
        This is the default window menu. It will be copied if
        the user's window menu is missing.

CONFIG
------
    *menuFile:* 'location'::
        The location of the user's root menu.

    *windowMenuFile:* 'location'::
        The location of the user's window menu.

ENVIRONMENT
-----------
The 'command...' field of the *[exec]* tag can take advantage of other
environment variables if they are set before shynebox is started.

EXAMPLES
--------
.Root Menu
....
# shynebox menu file
[begin] (shynebox)
    [exec] (urxvt) {urxvt -ls} </usr/share/pixmaps/rxvt-unicode.png>
    [exec] (The GIMP) {gimp}
    [exec] (Vim) {rxvt -geometry 132x60 -name VIM -e screen vim}
    [exec] (Mutt) {rxvt -name mutt -e mutt}
    [submenu] (mozilla)
        [exec] (browser) {firefox}
        [exec] (mail) {thunderbird}
    [end]
    [submenu] (Window Manager)
        [exec] (Edit Menus) {nedit ~/.shynebox/menu}
        [submenu] (Style) {Which Style?}
            [stylesdir] (~/.shynebox/styles)
            [stylesmenu] (shynebox Styles) {@pkgdatadir@/styles}
        [end]
        [config] (Config Options)
        [reconfig] (Reconfigure)
        [restart] (Restart)
    [end]
    [exit] (Log Out)
[end]
....

.Default Window Menu
....
[begin]
  [shade]
  [stick]
  [iconify]
  [maximize]
  [settitledialog]
  [raise]
  [lower]
  [sendto]
  [layer]
  [remember]
  [separator]
  [close]
[end]
....

AUTHORS
-------
- zlice updated for shynebox
- Jim Ramsay <i.am at jimramsay com> (>fluxbox-1.0.0)
- Curt Micol <asenchi at asenchi com> (>fluxbox-0.9.11)
- Tobias Klausmann <klausman at users sourceforge net> (<=fluxbox-0.9.11)
- Grubert <grubert at users sourceforge net> (fluxbox)
- Matthew Hawkins <matt at mh dropbear id au> (blackbox)
- Wilbert Berendsen <wbsoft at xs4all nl> (blackbox)

SEE ALSO
--------
shynebox(1) shynebox-keys(5) shynebox-apps(5) xkill(1) iconv(1)
